main:
    ;mov 1, *bp0e
    ;mov sprintint_for1.h, *bp0h
    ;mov sprintint_for1.l, *bp0l
    ;mov breakpoint.h, *bpah
    ;mov breakpoint.l, *bpal

    call lcd_init
    subi SP, 6, SP ; выделить 3 слова в стеке
    mov 1, [0] ; [0] – предпосл. эл.
    mov 1, [-2] ; [-2] – посл. эл.
    push str.l
    push str.h
    call lcd_prints ; вывести “1 1 “
    addi SP, 2, SP
    mov 19, [-4] ; [-4] - счетчик цикла
main_for:
    subi [-4], 1, [-4]
    jez main_for_end ; условие цикла
    mov [0], A
    add [-2], A, A ; A - новый эл.
    push A ; сохранить новый эл. в стеке

    push A
    push buff.l
    push buff.h
    call sprintint ; преобразовать число в строку
    push buff.l
    push buff.h
    call lcd_prints ; вывести новый элемент
    push ' '
    call lcd_putc ; вывести пробел
    addi SP, 12, SP

    mov [-2], [0] ; предпосл. эл. = посл. эл.
    pop [-2] ; посл. эл. = новый эл.
    jmp main_for
main_for_end:
    addi SP, 6, SP ; вернуть 3 слова в стек
    halt ; остановить процессор

str:
    dw "1 1 "
buff = 10000000h ; временный буфер для строки, содержащей новый элемент

#include "lcd.rcpu"
#include "sprint.rcpu"
;#include "breakpoint.rcpu"
