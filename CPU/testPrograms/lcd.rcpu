main:
    mov interrupt.l, *int_low
    mov interrupt.h, *int_high
    call lcd_init
    ;push str.l
    ;push str.h
    ;call lcd_prints
    ;addi SP, 2
    halt

lcd_init:
    push 38h
    call lcd_cmd
    push 0Fh
    call lcd_cmd
    push 01h
    call lcd_cmd
    push 06h
    call lcd_cmd
    addi SP, 4, SP
    ret

page_reg = FFFF1000h

lcd_prints:
    mov [4], *page_reg
    mov [5], A
lcd_prints_while1:
    mov *A, B
    jeq lcd_prints_while1_end
    push B
    call lcd_putc
    addi SP, 1, SP
    addi A, 1, A
    jmp lcd_prints_while1
lcd_prints_while1_end:
    ret

lcd_cmd:
    mov 0, *int_enable
    mov [4], A
    mov A, *lcd_data
    mov 0, *lcd_ctrl
    mov 1, *lcd_ctrl
    mov 0, *lcd_ctrl
    subi A, 4, A
    jge lcd_cmd_if1_end
    mov 181, C
lcd_cmd_do_while1:
    subi C, 1, C
    jge lcd_cmd_do_while1
lcd_cmd_if1_end:
    mov 4, *lcd_ctrl
    mov 1, *int_enable
    ret

lcd_putc:
    mov 0, *int_enable
    mov [4], *lcd_data
    mov 5, *lcd_ctrl
    mov 4, *lcd_ctrl
    mov 8, C
lcd_putc_do_while1:
    subi C, 1, C
    jge lcd_putc_do_while1
    mov 1, *int_enable
    ret

str:
    dw "Hello world! (^_^)  Hello world! (^_^)  Hello world! (^_^)  (/\xDF\xDB\xDF)/"
int_str:
    dw " Interrupt! "
lcd_data = FFFF0000h
lcd_ctrl = FFFF0001h

interrupt:
    push [4]
    call convert_char
    jez interrupt_if1_end
    push A
    call lcd_putc
    addi SP, 1, SP
interrupt_if1_end:
    addi SP, 1, SP
    pop A
    pop B
    pop C
    addi SP, 1, SP
    ret

int_enable = FFFFFFFDh
int_low    = FFFFFFFEh
int_high   = FFFFFFFFh

convert_char:
    mov [4], A
    subi A, 15h, A
    jlt convert_char_if1_else
    subi A, 3Ah, A
    jge convert_char_if1_else
    addi A, 3Ah, A
    mov char_table.h, *page_reg
    add char_table.l, A, A
    mov *A, A
    ret
convert_char_if1_else:
    mov 0, A
    ret

char_table:
    dw "Q1\0\0\0ZSAW2\0" ;15-20
    dw "CXDE43\0\0 VFTR5\0" ;21-30
    dw "NBHGY6\0\0\0MJU78\0" ;31-40
    dw ",KIO09\0\0./L;P-\0" ;41-50
